pipeline {
    agent any

    environment {
        DOCKERHUB_USER = '<your-dockerhub-username>'
        IMAGE_NAME     = '<your-image-name>'
        VERSION        = "v${BUILD_NUMBER}"
    }

    stages {
        stage('Clean Workspace') {
            steps {
                deleteDir()
            }
        }
        stage('Clone Repository') {
            steps {
                dir('app') {
                    git branch: 'main', url: 'https://github.com/<you-repo>.git'
                }
            }
        }
        stage('List Workspace') {
            steps {
                dir('app') {
                    sh 'ls -al'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                dir('app') {
                    sh 'docker build --no-cache -t ${DOCKERHUB_USER}/${IMAGE_NAME}:${VERSION} .'
                }
            }
        }
        stage('Push to DockerHub') {
            steps {
                withCredentials([
                    usernamePassword(credentialsId: 'dockerhub-creds',
                                      usernameVariable: 'DOCKER_USER',
                                      passwordVariable: 'DOCKER_PASS')
                ]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push ${DOCKERHUB_USER}/${IMAGE_NAME}:${VERSION}
                    '''
                }
            }
        }
        stage('Deploy with Ansible') {
            environment {
                PATH = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH"
                ANSIBLE_HOST_KEY_CHECKING = "False"
            }
            steps {
                sshagent(['ec2-ssh-key']) {
                    sh 'cd ${WORKSPACE}/app && ls -al'
                    sh 'cd ${WORKSPACE}/app && ansible-playbook deploy-playbook.yml -i inventory.ini --extra-vars "image_tag=${VERSION}"'
                }
            }
        }
    }
    
    post {
        success {
            echo "✅ Deployment successful!"
        }
        failure {
            echo "❌ Deployment failed."
        }
    }
}
